% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rqTList.R
\name{predict.rqTList}
\alias{predict.rqTList}
\title{Predict from a \code{rqTList} object.}
\usage{
\method{predict}{rqTList}(
  object,
  newdata,
  lastFullYear = TRUE,
  out = c("long", "short"),
  na.action = na.pass,
  ...
)
}
\arguments{
\item{object}{A \code{rqTList} object representing a list of
regression quantile models as created by the
\code{\link[quantreg]{rq}} function of the \pkg{quantreg}
package.}

\item{newdata}{New data frame.}

\item{lastFullYear}{Logical. If \code{TRUE}, only the last full
year in the data used to fit the quantile regressions will be
used. If the regression quantile uses only functions of the
date that have the one-year periodicity, the one should use
\code{lastFullYear = TRUE}.}

\item{out}{Character giving the format of the output. If
\code{"short"} a numeric matrix is returned with the formated
date as its rownames. If \code{"long"} a data frame with
columns \code{Date}, \code{u} and \code{tau} is returned.  The
long format is useful when ggplots areto be produced.}

\item{na.action}{See \code{\link[quantreg]{predict.rq}}.}

\item{...}{Further arguments passed to the \code{predict} method
of the class \code{"rq"}.}
}
\value{
A matrix or a data frame, depending on the value or
    \code{out}.
}
\description{
Predict from a \code{rqTList} object.
}
\examples{
RqRennes <- rqTList(dailyMet = Rennes)
## use a matrix
pRennes <- predict(RqRennes, out = "short")
\dontrun{
    stat <- findStationMF("bordeaux-me")
    ## you may here have to use `Sys.setenv(metData = xxx)`
    Bordeaux <- readMet(stat)
    RqBordeaux <- rqTList(dailyMet = Bordeaux)
    pBordeaux <- predict(RqBordeaux, out = "short")
    pBordeaux - pRennes
    autoplot(as.ts(pBordeaux - pRennes)) +
       ggtitle("differences in the quantiles Bordeaux - Rennes")
}
}
