% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miscUtils.R
\name{designVars}
\alias{designVars}
\title{Create variables by using "design functions" of the date such as
trigonometric, polynomial, splines, ...}
\usage{
designVars(designList, dt, trace = 0, dropDup = "Cst")
}
\arguments{
\item{designList}{A list with a specific structure describing the
design functions to evaluate, and the arguments (except the
date) to use. Each element of the list is itself a list with
the two elements named \code{what} and \code{args} as
\code{\link{do.call}}. The element \code{what} contains the
name of the design function and the element \code{args}
contains the named list of values for the arguments of
\code{what}, \emph{with the first argument omitted}.}

\item{dt}{A "date" vector on which the design functions will be
evaluated. This should be an object with class \code{"Date"}
or an object that will be coerced to this class e.g. a
character vector with a suitable format.}

\item{trace}{Integer level of verbosity}

\item{dropDup}{Character giving the names of variables that must
be dropped when they are duplicated across designs.}
}
\value{
A data frame with \code{length(dt)} rows containing the
    new variables.
}
\description{
By "design function" we a function building a "design matrix"
\code{X} with its columns being functions \eqn{X_i(t)} where
\eqn{t} is the time (actually a date). Each row of the matrix
corresponds to a value of the time. It is assumed that \emph{the
time is the first formal argument of the function}. The name of
this argument is arbitrary. This allows to use design functions
with different names fot the 1-st argument such as \code{"t"},
\code{"date"}, \code{"Date"}, ...
}
\details{
Any design function used should fulfill the following
requirements.

\enumerate{
    \item The first argument must be the date. The name of this
      argument will not be used in the call.
    \item
       The returned value should be an object inheriting from the
       \code{"matrix"} class with suitable column names. For
       compatibility reasons, it can also be a list containing the
       design matrix as its element named \code{"X"}.
}
The call to a design function should mention \code{Date} as the
first argument. This call refers to the \code{dailyMet} object
used, from which the \code{Date} column will be used.
}
\note{
The naming of the elements of the list given in
    \code{designList} is arbitrary and does not impact the result.
    The names can be used to make code clearer.
}
\section{Caution}{
 When several designs are used, some conflit may
    arise because some names in the design matrices are
    identical. Unless the corresponding names are in
    \code{dropDup}, the latest variable will be automatically
    renamed as in \code{\link{data.frame}}. For instance if two
    variables \code{"t1"} then the second one will be renamed
    \code{"t1.1"}, see \bold{Examples}. This is a possible source
    of confusion, and good options could be either to drop this
    variable or to wrap the design function into another function
    which uses different column names.
}

\examples{
desList <-
    list("sinAndCos" = list(what = "tsDesign",
                            args = list(type = "trigo", df = 7)),
          "polys" = list(what = "tsDesign",
                         args = list(type = "polynom", df = 3)),
          "breaks" = list(what = "NSGEV::breaksX",
                          args = list(breaks = c('1970-01-01', '1990-01-01'))))

des1 <- designVars(desList, dt = c("2021-01-01", "2021-01-02"), trace = 1)
des2 <- designVars(desList, dt = Rennes$Date, trace = 1)
des1
head(des2)

}
